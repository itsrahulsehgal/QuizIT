{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/dashboard/ClassCard.js\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport leaveFill from '@iconify/icons-eva/trash-2-fill'; // material\n\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { IconButton, Link, Card, Grid, Avatar, Typography, CardContent } from '@material-ui/core';\nimport SvgIconStyle from '../SvgIconStyle';\nimport { mockImgCover } from '../../utils/mockImages';\nimport { leaveClass } from '../../actions/user';\nimport { getClass } from '../../actions/classroom'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardMediaStyle = styled('div')({\n  position: 'relative',\n  paddingTop: 'calc(100% * 2 / 5)'\n});\nconst TitleStyle = styled(Link)({\n  height: 30,\n  overflow: 'hidden',\n  WebkitLineClamp: 2,\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical'\n});\nconst AvatarStyle = styled(Avatar)(({\n  theme\n}) => ({\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  left: theme.spacing(3),\n  bottom: theme.spacing(-2)\n}));\nconst InfoStyle = styled('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-end'\n});\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n}); // ----------------------------------------------------------------------\n\nfunction ClassCard({\n  classroom,\n  index,\n  leaveClass,\n  getClass\n}) {\n  const {\n    cover,\n    title,\n    author,\n    code,\n    subject\n  } = classroom;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMediaStyle, {\n        children: [/*#__PURE__*/_jsxDEV(SvgIconStyle, {\n          color: \"paper\",\n          src: \"/static/icons/shape-avatar.svg\",\n          sx: {\n            width: 80,\n            height: 36,\n            zIndex: 9,\n            bottom: -15,\n            position: 'absolute'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvatarStyle, {\n          alt: author.name,\n          src: author.avatarURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CoverImgStyle, {\n          alt: title,\n          src: cover != null ? cover : mockImgCover((index + 1) % 24)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"caption\",\n          sx: {\n            color: 'text.disabled',\n            display: 'block'\n          },\n          children: author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TitleStyle, {\n          onClick: () => getClass(code),\n          to: `/class/info?code=${classroom.code}`,\n          color: \"inherit\",\n          variant: \"subtitle2\",\n          underline: \"hover\",\n          component: RouterLink,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              flex: 'auto'\n            },\n            color: \"inherit\",\n            variant: \"subtitle2\",\n            underline: \"hover\",\n            children: subject !== '' ? `Subject : ${subject}` : ' '\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoStyle, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => leaveClass(code),\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: leaveFill\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ClassCard;\nClassCard.propTypes = {\n  classroom: PropTypes.object.isRequired,\n  leaveClass: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  getClass: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  leaveClass,\n  getClass\n})(ClassCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassCard\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/dashboard/ClassCard.js"],"names":["PropTypes","connect","Icon","Link","RouterLink","leaveFill","experimentalStyled","styled","IconButton","Card","Grid","Avatar","Typography","CardContent","SvgIconStyle","mockImgCover","leaveClass","getClass","CardMediaStyle","position","paddingTop","TitleStyle","height","overflow","WebkitLineClamp","display","WebkitBoxOrient","AvatarStyle","theme","zIndex","width","left","spacing","bottom","InfoStyle","flexWrap","justifyContent","CoverImgStyle","top","objectFit","ClassCard","classroom","index","cover","title","author","code","subject","name","avatarURL","color","flex","propTypes","object","isRequired","func","number"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport leaveFill from '@iconify/icons-eva/trash-2-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { IconButton, Link, Card, Grid, Avatar, Typography, CardContent } from '@material-ui/core';\nimport SvgIconStyle from '../SvgIconStyle';\nimport { mockImgCover } from '../../utils/mockImages';\nimport { leaveClass } from '../../actions/user';\nimport { getClass } from '../../actions/classroom';\n\n// ----------------------------------------------------------------------\n\nconst CardMediaStyle = styled('div')({\n  position: 'relative',\n  paddingTop: 'calc(100% * 2 / 5)'\n});\n\nconst TitleStyle = styled(Link)({\n  height: 30,\n  overflow: 'hidden',\n  WebkitLineClamp: 2,\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical'\n});\n\nconst AvatarStyle = styled(Avatar)(({ theme }) => ({\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  left: theme.spacing(3),\n  bottom: theme.spacing(-2)\n}));\n\nconst InfoStyle = styled('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'flex-end'\n});\n\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\n// ----------------------------------------------------------------------\n\nfunction ClassCard({ classroom, index, leaveClass, getClass }) {\n  const { cover, title, author, code, subject } = classroom;\n\n  return (\n    <Grid item xs={12} sm={6} md={3}>\n      <Card sx={{ position: 'relative' }}>\n        <CardMediaStyle>\n          <SvgIconStyle\n            color=\"paper\"\n            src=\"/static/icons/shape-avatar.svg\"\n            sx={{\n              width: 80,\n              height: 36,\n              zIndex: 9,\n              bottom: -15,\n              position: 'absolute'\n            }}\n          />\n          <AvatarStyle alt={author.name} src={author.avatarURL} />\n          <CoverImgStyle alt={title} src={cover != null ? cover : mockImgCover((index + 1) % 24)} />\n        </CardMediaStyle>\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"caption\"\n            sx={{ color: 'text.disabled', display: 'block' }}\n          >\n            {author.name}\n          </Typography>\n\n          <TitleStyle\n            onClick={() => getClass(code)}\n            to={`/class/info?code=${classroom.code}`}\n            color=\"inherit\"\n            variant=\"subtitle2\"\n            underline=\"hover\"\n            component={RouterLink}\n          >\n            {title}\n          </TitleStyle>\n          <div style={{ display: 'flex' }}>\n            <Typography\n              style={{ flex: 'auto' }}\n              color=\"inherit\"\n              variant=\"subtitle2\"\n              underline=\"hover\"\n            >\n              {subject !== '' ? `Subject : ${subject}` : ' '}\n            </Typography>\n            <InfoStyle>\n              <IconButton onClick={() => leaveClass(code)} color=\"error\">\n                <Icon icon={leaveFill} />\n              </IconButton>\n            </InfoStyle>\n          </div>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nClassCard.propTypes = {\n  classroom: PropTypes.object.isRequired,\n  leaveClass: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  getClass: PropTypes.func.isRequired\n};\n\nexport default connect(null, { leaveClass, getClass })(ClassCard);\n"]},"metadata":{},"sourceType":"module"}