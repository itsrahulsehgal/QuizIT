{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, styled, useThemeProps } from '@material-ui/core/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@material-ui/core/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return _extends({}, styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    });\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  const {\n    children,\n    className,\n    collapseIcon,\n    ContentComponent = TreeItemContent,\n    ContentProps,\n    endIcon,\n    expandIcon,\n    disabled: disabledProp,\n    icon,\n    id: idProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  const styleProps = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let displayIcon;\n  let expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/TR/wai-aria-practices/#TreeView\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    const unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    styleProps: styleProps,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      styleProps: styleProps\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/node_modules/@material-ui/lab/TreeItem/TreeItem.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","clsx","PropTypes","elementTypeAcceptingRef","Collapse","alpha","styled","useThemeProps","ownerDocument","useForkRef","unsupportedProp","unstable_composeClasses","composeClasses","TreeViewContext","DescendantProvider","useDescendant","TreeItemContent","treeItemClasses","getTreeItemUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","styleProps","classes","slots","root","content","expanded","selected","focused","disabled","iconContainer","label","group","TreeItemRoot","name","slot","overridesResolver","props","styles","listStyle","margin","padding","outline","StyledTreeItemContent","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","palette","action","hover","opacity","disabledOpacity","focus","primary","main","selectedOpacity","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","paddingLeft","position","typography","body1","TreeItemGroup","marginLeft","TreeItem","forwardRef","inProps","ref","children","className","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","icon","id","idProp","nodeId","onClick","onMouseDown","TransitionComponent","TransitionProps","other","icons","contextIcons","isExpanded","isFocused","isSelected","isDisabled","multiSelect","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","useContext","treeitemElement","setTreeitemElement","useState","contentRef","useRef","handleRef","descendant","useMemo","element","index","parentId","expandable","Boolean","Array","isArray","length","displayIcon","expansionIcon","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","useEffect","idAttribute","undefined","current","textContent","substring","toLowerCase","ariaSelected","handleFocus","event","target","currentTarget","getElementById","preventScroll","unfocusable","role","tabIndex","onFocus","as","unmountOnExit","in","component","process","env","NODE_ENV","propTypes","node","object","string","bool","isRequired","func","sx","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, styled, useThemeProps } from '@material-ui/core/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@material-ui/core/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return _extends({}, styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    });\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  const {\n    children,\n    className,\n    collapseIcon,\n    ContentComponent = TreeItemContent,\n    ContentProps,\n    endIcon,\n    expandIcon,\n    disabled: disabledProp,\n    icon,\n    id: idProp,\n    label,\n    nodeId,\n    onClick,\n    onMouseDown,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  const styleProps = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let displayIcon;\n  let expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/TR/wai-aria-practices/#TreeView\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      ownerDocument(event.target).getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    const unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    styleProps: styleProps,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      styleProps: styleProps\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;"]},"metadata":{},"sourceType":"module"}