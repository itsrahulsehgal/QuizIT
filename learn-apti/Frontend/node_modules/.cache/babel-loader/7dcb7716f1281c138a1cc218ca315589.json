{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { GET_TEST, SUBMIT_TEST, CLASS_ERROR, CLASS_RESET } from './actionTypes';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\n// Start Current Test\nexport const getTest = id => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/tests/id/${id}`, config);\n    dispatch({\n      type: GET_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Start Current Test\nexport const startTest = id => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/tests/start/${id}`);\n    dispatch({\n      type: GET_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Submit current test\nexport const submitTest = (id, response) => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    await axios.post(`/api/tests/id/${id}`, response, config);\n    toast.success('Test submitted sucessfully.', settings);\n    dispatch({\n      type: SUBMIT_TEST\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["toast","axios","GET_TEST","SUBMIT_TEST","CLASS_ERROR","CLASS_RESET","config","headers","settings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getTest","id","dispatch","type","res","get","payload","data","err","errors","response","error","msg","statusText","status","startTest","console","log","submitTest","post","success"],"sources":["/home/rahul/Desktop/client/src/actions/test.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { GET_TEST, SUBMIT_TEST, CLASS_ERROR, CLASS_RESET } from './actionTypes';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\n// Start Current Test\nexport const getTest = (id) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/tests/id/${id}`, config);\n    dispatch({\n      type: GET_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Start Current Test\nexport const startTest = (id) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/tests/start/${id}`);\n    dispatch({\n      type: GET_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Submit current test\nexport const submitTest = (id, response) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    await axios.post(`/api/tests/id/${id}`, response, config);\n    toast.success('Test submitted sucessfully.', settings);\n    dispatch({\n      type: SUBMIT_TEST\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}