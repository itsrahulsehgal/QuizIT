{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/createTest/RulesFrom.js\";\nimport { Icon } from '@iconify/react';\nimport PropTypes from 'prop-types';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport trashFill from '@iconify/icons-eva/trash-2-fill'; // material\n\nimport { Stack, TextField, IconButton, Button } from '@material-ui/core'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RulesForm({\n  handleBack,\n  handleNext,\n  rules,\n  setRules\n}) {\n  const rule = {\n    noofques: '',\n    marks: ''\n  };\n\n  const AddRules = () => {\n    setRules([...rules, { ...rule,\n      type: rules.length + 1\n    }]);\n  };\n\n  const RemoveRule = index => {\n    const list = [...rules];\n    setRules(list.filter((value, i) => i !== index));\n  };\n\n  const handleChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...rules];\n    list[index][name] = value;\n    setRules(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 3,\n    children: [rules.map((curr, index) => /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column',\n          sm: 'row'\n        },\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"type\",\n          name: \"type\",\n          label: \"Type\",\n          value: curr.type,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"noofques\",\n          name: \"noofques\",\n          label: \"No of Questions\",\n          value: curr.noofques,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"marks\",\n          name: \"marks\",\n          label: \"Marks\",\n          value: curr.marks,\n          fullWidth: true,\n          required: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => RemoveRule(index),\n          color: \"error\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: trashFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: {\n        xs: 'column',\n        sm: 'row'\n      },\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: AddRules,\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: plusFill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 22\n        }, this),\n        children: \"Add New Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          right: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          style: {\n            margin: 5\n          },\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disableElevation: true,\n          style: {\n            margin: 10\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RulesForm;\nRulesForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setRules: PropTypes.func.isRequired,\n  rules: PropTypes.array.isRequired\n};\nexport default RulesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RulesForm\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/createTest/RulesFrom.js"],"names":["Icon","PropTypes","plusFill","trashFill","Stack","TextField","IconButton","Button","RulesForm","handleBack","handleNext","rules","setRules","rule","noofques","marks","AddRules","type","length","RemoveRule","index","list","filter","value","i","handleChange","e","name","target","map","curr","xs","sm","position","right","margin","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["import { Icon } from '@iconify/react';\nimport PropTypes from 'prop-types';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport trashFill from '@iconify/icons-eva/trash-2-fill';\n// material\nimport { Stack, TextField, IconButton, Button } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nfunction RulesForm({ handleBack, handleNext, rules, setRules }) {\n  const rule = {\n    noofques: '',\n    marks: ''\n  };\n\n  const AddRules = () => {\n    setRules([...rules, { ...rule, type: rules.length + 1 }]);\n  };\n  const RemoveRule = (index) => {\n    const list = [...rules];\n    setRules(list.filter((value, i) => i !== index));\n  };\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...rules];\n    list[index][name] = value;\n    setRules(list);\n  };\n\n  return (\n    <Stack spacing={3}>\n      {rules.map((curr, index) => (\n        <Stack key={index} spacing={2}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              required\n              id=\"type\"\n              name=\"type\"\n              label=\"Type\"\n              value={curr.type}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n            <TextField\n              required\n              id=\"noofques\"\n              name=\"noofques\"\n              label=\"No of Questions\"\n              value={curr.noofques}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n            <TextField\n              id=\"marks\"\n              name=\"marks\"\n              label=\"Marks\"\n              value={curr.marks}\n              fullWidth\n              required\n              onChange={(e) => handleChange(e, index)}\n            />\n\n            <IconButton onClick={() => RemoveRule(index)} color=\"error\">\n              <Icon icon={trashFill} />\n            </IconButton>\n          </Stack>\n        </Stack>\n      ))}\n\n      <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={AddRules}\n          startIcon={<Icon icon={plusFill} />}\n        >\n          Add New Rule\n        </Button>\n      </Stack>\n\n      <div style={{ position: 'relative' }}>\n        <div style={{ position: 'absolute', right: 0 }}>\n          <Button color=\"primary\" style={{ margin: 5 }} onClick={handleBack}>\n            Back\n          </Button>\n          <Button\n            disableElevation\n            style={{ margin: 10 }}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleNext}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </Stack>\n  );\n}\n\nRulesForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setRules: PropTypes.func.isRequired,\n  rules: PropTypes.array.isRequired\n};\n\nexport default RulesForm;\n"]},"metadata":{},"sourceType":"module"}