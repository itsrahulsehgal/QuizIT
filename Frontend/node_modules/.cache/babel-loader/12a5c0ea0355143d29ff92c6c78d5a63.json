{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { GET_CLASS, EDIT_CLASS, CLASS_ERROR, CLASS_RESET, GET_TESTS, CREATE_TEST, DELETE_TEST } from './actionTypes';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n// Get current class\nexport const getClass = code => async dispatch => {\n  console.log('here');\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/classrooms/${code}`, config);\n    dispatch({\n      type: GET_CLASS,\n      payload: res.data\n    });\n    const test = await axios.get(`/api/tests/${code}`, config);\n    dispatch({\n      type: GET_TESTS,\n      payload: test.data\n    });\n  } catch (err) {\n    if (err.response) {\n      dispatch({\n        type: CLASS_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\n\n// Edit current class\nexport const editClass = (code, data) => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.patch(`/api/classrooms/${code}`, data, config);\n    toast.success('Class Details Updated !', settings);\n    dispatch({\n      type: EDIT_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createTest = test => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.post(`/api/tests`, test, config);\n    toast.success('Test created sucessfully.', settings);\n    dispatch({\n      type: CREATE_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete current test\nexport const deleteTest = id => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    await axios.delete(`/api/tests/id/${id}`, config);\n    toast.success('Test Deleted', settings);\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","toast","GET_CLASS","EDIT_CLASS","CLASS_ERROR","CLASS_RESET","GET_TESTS","CREATE_TEST","DELETE_TEST","config","headers","settings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getClass","code","dispatch","console","log","type","res","get","payload","data","test","err","response","msg","statusText","status","editClass","patch","success","createTest","post","errors","error","deleteTest","id","delete"],"sources":["/home/rahul/Desktop/learn_apti-frontend/src/actions/classroom.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  GET_CLASS,\n  EDIT_CLASS,\n  CLASS_ERROR,\n  CLASS_RESET,\n  GET_TESTS,\n  CREATE_TEST,\n  DELETE_TEST\n} from './actionTypes';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n// Get current class\nexport const getClass = (code) => async (dispatch) => {\n  console.log('here');\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/classrooms/${code}`, config);\n    dispatch({\n      type: GET_CLASS,\n      payload: res.data\n    });\n    const test = await axios.get(`/api/tests/${code}`, config);\n    dispatch({\n      type: GET_TESTS,\n      payload: test.data\n    });\n  } catch (err) {\n    if (err.response) {\n      dispatch({\n        type: CLASS_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\n\n// Edit current class\nexport const editClass = (code, data) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.patch(`/api/classrooms/${code}`, data, config);\n    toast.success('Class Details Updated !', settings);\n    dispatch({\n      type: EDIT_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\nexport const createTest = (test) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.post(`/api/tests`, test, config);\n    toast.success('Test created sucessfully.', settings);\n    dispatch({\n      type: CREATE_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete current test\nexport const deleteTest = (id) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    await axios.delete(`/api/tests/id/${id}`, config);\n    toast.success('Test Deleted', settings);\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}