{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/test/TestForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Formik } from 'formik';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, Stack, Button, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTestForm.propTypes = {\n  count: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nfunction TestForm({\n  count,\n  data,\n  handleSubmit\n}) {\n  if (count === 2) {\n    document.getElementById('submit').click();\n  }\n\n  const defaultValues = {};\n  data.forEach(ques => {\n    defaultValues[ques._id] = '';\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: defaultValues,\n    onSubmit: values => {\n      console.log(values);\n      handleSubmit(values);\n    },\n    children: ({\n      setFieldValue\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [data.map((ques, index) => /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [`${index + 1} . `, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), ques.question.includes('data:image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n          height: \"400px\",\n          width: \"auto\",\n          src: ques.question,\n          alt: \"question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: ques.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: ques._id,\n          onChange: event => {\n            setFieldValue(ques._id, event.currentTarget.value);\n          },\n          style: {\n            width: '70%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: ques.option1,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 67\n              }, this),\n              label: ques.option1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: ques.option2,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 67\n              }, this),\n              label: ques.option2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: ques.option3,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 67\n              }, this),\n              label: ques.option3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: ques.option4,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 67\n              }, this),\n              label: ques.option4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'end'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disableElevation: true,\n          style: {\n            margin: 10\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          id: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TestForm;\nexport default TestForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/test/TestForm.js"],"names":["React","PropTypes","Form","Formik","Radio","RadioGroup","FormControlLabel","FormControl","Stack","Button","Typography","TestForm","propTypes","count","number","isRequired","data","array","handleSubmit","func","document","getElementById","click","defaultValues","forEach","ques","_id","values","console","log","setFieldValue","map","index","width","question","includes","event","currentTarget","value","xs","sm","option1","option2","option3","option4","display","justifyContent","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Formik } from 'formik';\nimport {\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Stack,\n  Button,\n  Typography\n} from '@material-ui/core';\n\nTestForm.propTypes = {\n  count: PropTypes.number.isRequired,\n  data: PropTypes.array.isRequired,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nfunction TestForm({ count, data, handleSubmit }) {\n  if (count === 2) {\n    document.getElementById('submit').click();\n  }\n  const defaultValues = {};\n  data.forEach((ques) => {\n    defaultValues[ques._id] = '';\n  });\n  return (\n    <Formik\n      initialValues={defaultValues}\n      onSubmit={(values) => {\n        console.log(values);\n        handleSubmit(values);\n      }}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          {data.map((ques, index) => (\n            <FormControl key={index} component=\"fieldset\" style={{ width: '100%' }}>\n              <Typography variant=\"h6\">{`${index + 1} . `} </Typography>\n              {ques.question.includes('data:image/') ? (\n                <img height=\"400px\" width=\"auto\" src={ques.question} alt=\"question\" />\n              ) : (\n                <Typography variant=\"h6\">{ques.question}</Typography>\n              )}\n              <RadioGroup\n                name={ques._id}\n                onChange={(event) => {\n                  setFieldValue(ques._id, event.currentTarget.value);\n                }}\n                style={{ width: '70%' }}\n              >\n                <Stack direction={{ xs: 'column', sm: 'row' }} justifyContent=\"space-between\">\n                  <FormControlLabel value={ques.option1} control={<Radio />} label={ques.option1} />\n                  <FormControlLabel value={ques.option2} control={<Radio />} label={ques.option2} />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} justifyContent=\"space-between\">\n                  <FormControlLabel value={ques.option3} control={<Radio />} label={ques.option3} />\n                  <FormControlLabel value={ques.option4} control={<Radio />} label={ques.option4} />\n                </Stack>\n              </RadioGroup>\n            </FormControl>\n          ))}\n          <div style={{ display: 'flex', justifyContent: 'end' }}>\n            <Button\n              disableElevation\n              style={{ margin: 10 }}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              id=\"submit\"\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default TestForm;\n"]},"metadata":{},"sourceType":"module"}