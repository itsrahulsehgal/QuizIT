{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/learn_apti-frontend/Frontend/src/components/authentication/login/LoginForm.js\",\n  _s = $RefreshSig$();\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\nimport { login } from '../../../actions/auth';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(_ref) {\n  _s();\n  let {\n    login\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: values => {\n      login(values);\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email address\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            ...getFieldProps('remember'),\n            checked: values.remember\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"NHvwTgWisXmYcXpq6XbEDoaa5a0=\", false, function () {\n  return [useFormik];\n});\n_c = LoginForm;\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  login\n})(LoginForm);\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Yup","connect","PropTypes","useState","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","login","jsxDEV","_jsxDEV","LoginForm","_ref","_s","showPassword","setShowPassword","LoginSchema","object","shape","email","string","required","password","formik","initialValues","remember","validationSchema","onSubmit","values","errors","touched","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","value","children","autoComplete","noValidate","spacing","fullWidth","type","label","error","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","InputProps","endAdornment","position","onClick","edge","icon","direction","alignItems","justifyContent","sx","my","control","checked","size","variant","loading","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/home/rahul/Desktop/learn_apti-frontend/Frontend/src/components/authentication/login/LoginForm.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport {\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel\n} from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n\nimport { login } from '../../../actions/auth';\n\n// ----------------------------------------------------------------------\n\nfunction LoginForm({ login }) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values) => {\n      login(values);\n    }\n  });\n\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\n            label=\"Remember me\"\n          />\n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Login\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired\n};\n\nexport default connect(null, { login })(LoginForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}