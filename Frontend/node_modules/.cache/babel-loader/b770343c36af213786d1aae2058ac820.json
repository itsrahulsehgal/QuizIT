{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/createTest/DetailsForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport uuid from 'uuid/dist/v4'; // material\n\nimport { Stack, TextField, Button } from '@material-ui/core';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport MobileDatePicker from '@material-ui/lab/MobileDatePicker'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TestForm({\n  handleBack,\n  handleNext,\n  setDetails,\n  code,\n  setTestId\n}) {\n  _s();\n\n  const testId = uuid();\n  const [dueDate, setDueDate] = useState(new Date());\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Test Name is required !'),\n    marks: Yup.number().required('Marks is required !'),\n    durationHrs: Yup.number().required('Duration is required !'),\n    durationMin: Yup.number().required('Durat ion is required !')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      marks: '',\n      durationHrs: '',\n      durationMin: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: values => {\n      console.log({ ...values,\n        dueDate\n      });\n      setDetails({ ...values,\n        dueDate,\n        code,\n        testId\n      });\n      setTestId(testId);\n      handleNext();\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            ...getFieldProps('name'),\n            error: Boolean(touched.name && errors.name),\n            helperText: touched.name && errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Marks\",\n            ...getFieldProps('marks'),\n            error: Boolean(touched.marks && errors.marks),\n            helperText: touched.marks && errors.marks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Duration Hours \",\n            ...getFieldProps('durationHrs'),\n            error: Boolean(touched.durationHrs && errors.durationHrs),\n            helperText: touched.durationHrs && errors.durationHrs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Duration Mins\",\n            ...getFieldProps('durationMin'),\n            error: Boolean(touched.durationMin && errors.durationMin),\n            helperText: touched.durationMin && errors.durationMin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n            label: \"Due Date\",\n            inputFormat: \"dd/MM/yyyy\",\n            value: dueDate,\n            onChange: newValue => {\n              setDueDate(newValue);\n            },\n            error: Boolean(touched.dueDate && errors.dueDate),\n            helperText: touched.dueDate && errors.dueDate,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              disabled: true,\n              style: {\n                margin: 5\n              },\n              onClick: handleBack,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disableElevation: true,\n              style: {\n                margin: 10\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestForm, \"8TfwKF/CVKLPnoie2+3vh36I/xA=\", false, function () {\n  return [useFormik];\n});\n\n_c = TestForm;\nTestForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setDetails: PropTypes.func.isRequired,\n  code: PropTypes.string.isRequired,\n  setTestId: PropTypes.func.isRequired\n};\nexport default TestForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/createTest/DetailsForm.js"],"names":["Yup","PropTypes","useState","useFormik","Form","FormikProvider","uuid","Stack","TextField","Button","AdapterDateFns","LocalizationProvider","MobileDatePicker","TestForm","handleBack","handleNext","setDetails","code","setTestId","testId","dueDate","setDueDate","Date","RegisterSchema","object","shape","name","string","min","max","required","marks","number","durationHrs","durationMin","formik","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","handleSubmit","getFieldProps","xs","sm","Boolean","newValue","params","position","right","margin","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport uuid from 'uuid/dist/v4';\n// material\nimport { Stack, TextField, Button } from '@material-ui/core';\n\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport MobileDatePicker from '@material-ui/lab/MobileDatePicker';\n// ----------------------------------------------------------------------\n\nfunction TestForm({ handleBack, handleNext, setDetails, code, setTestId }) {\n  const testId = uuid();\n  const [dueDate, setDueDate] = useState(new Date());\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('Test Name is required !'),\n    marks: Yup.number().required('Marks is required !'),\n    durationHrs: Yup.number().required('Duration is required !'),\n    durationMin: Yup.number().required('Durat ion is required !')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      marks: '',\n      durationHrs: '',\n      durationMin: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values) => {\n      console.log({ ...values, dueDate });\n      setDetails({ ...values, dueDate, code, testId });\n      setTestId(testId);\n      handleNext();\n    }\n  });\n\n  const { errors, touched, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              {...getFieldProps('name')}\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Marks\"\n              {...getFieldProps('marks')}\n              error={Boolean(touched.marks && errors.marks)}\n              helperText={touched.marks && errors.marks}\n            />\n          </Stack>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"Duration Hours \"\n              {...getFieldProps('durationHrs')}\n              error={Boolean(touched.durationHrs && errors.durationHrs)}\n              helperText={touched.durationHrs && errors.durationHrs}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Duration Mins\"\n              {...getFieldProps('durationMin')}\n              error={Boolean(touched.durationMin && errors.durationMin)}\n              helperText={touched.durationMin && errors.durationMin}\n            />\n          </Stack>\n\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <MobileDatePicker\n              label=\"Due Date\"\n              inputFormat=\"dd/MM/yyyy\"\n              value={dueDate}\n              onChange={(newValue) => {\n                setDueDate(newValue);\n              }}\n              error={Boolean(touched.dueDate && errors.dueDate)}\n              helperText={touched.dueDate && errors.dueDate}\n              renderInput={(params) => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n          <div style={{ position: 'relative' }}>\n            <div style={{ position: 'absolute', right: 0 }}>\n              <Button variant=\"contained\" disabled style={{ margin: 5 }} onClick={handleBack}>\n                Back\n              </Button>\n              <Button\n                disableElevation\n                style={{ margin: 10 }}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nTestForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setDetails: PropTypes.func.isRequired,\n  code: PropTypes.string.isRequired,\n  setTestId: PropTypes.func.isRequired\n};\n\nexport default TestForm;\n"]},"metadata":{},"sourceType":"module"}