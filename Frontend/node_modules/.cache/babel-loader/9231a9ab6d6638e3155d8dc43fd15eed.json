{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { GET_CLASS, EDIT_CLASS, CLASS_ERROR, CLASS_RESET, GET_TESTS, CREATE_TEST, DELETE_TEST } from './actionTypes';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n}; // Get current class\n\nexport const getClass = code => async dispatch => {\n  console.log('here');\n  dispatch({\n    type: CLASS_RESET\n  });\n\n  try {\n    const res = await axios.get(`/api/classrooms/${code}`, config);\n    dispatch({\n      type: GET_CLASS,\n      payload: res.data\n    });\n    const test = await axios.get(`/api/tests/${code}`, config);\n    dispatch({\n      type: GET_TESTS,\n      payload: test.data\n    });\n  } catch (err) {\n    if (err.response) {\n      dispatch({\n        type: CLASS_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n}; // Edit current class\n\nexport const editClass = (code, data) => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n\n  try {\n    const res = await axios.patch(`/api/classrooms/${code}`, data, config);\n    toast.success('Class Details Updated !', settings);\n    dispatch({\n      type: EDIT_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const createTest = test => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n\n  try {\n    const res = await axios.post(`/api/tests`, test, config);\n    toast.success('Test created sucessfully.', settings);\n    dispatch({\n      type: CREATE_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete current test\n\nexport const deleteTest = id => async dispatch => {\n  dispatch({\n    type: CLASS_RESET\n  });\n\n  try {\n    await axios.delete(`/api/tests/id/${id}`, config);\n    toast.success('Test Deleted', settings);\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n  } catch (err) {\n    const errors = err.response.data;\n\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/actions/classroom.js"],"names":["axios","toast","GET_CLASS","EDIT_CLASS","CLASS_ERROR","CLASS_RESET","GET_TESTS","CREATE_TEST","DELETE_TEST","config","headers","settings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getClass","code","dispatch","console","log","type","res","get","payload","data","test","err","response","msg","statusText","status","editClass","patch","success","createTest","post","errors","error","deleteTest","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  GET_CLASS,\n  EDIT_CLASS,\n  CLASS_ERROR,\n  CLASS_RESET,\n  GET_TESTS,\n  CREATE_TEST,\n  DELETE_TEST\n} from './actionTypes';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n// Get current class\nexport const getClass = (code) => async (dispatch) => {\n  console.log('here');\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.get(`/api/classrooms/${code}`, config);\n    dispatch({\n      type: GET_CLASS,\n      payload: res.data\n    });\n    const test = await axios.get(`/api/tests/${code}`, config);\n    dispatch({\n      type: GET_TESTS,\n      payload: test.data\n    });\n  } catch (err) {\n    if (err.response) {\n      dispatch({\n        type: CLASS_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\n\n// Edit current class\nexport const editClass = (code, data) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.patch(`/api/classrooms/${code}`, data, config);\n    toast.success('Class Details Updated !', settings);\n    dispatch({\n      type: EDIT_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\nexport const createTest = (test) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    const res = await axios.post(`/api/tests`, test, config);\n    toast.success('Test created sucessfully.', settings);\n    dispatch({\n      type: CREATE_TEST,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    console.log(err.response);\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete current test\nexport const deleteTest = (id) => async (dispatch) => {\n  dispatch({\n    type: CLASS_RESET\n  });\n  try {\n    await axios.delete(`/api/tests/id/${id}`, config);\n    toast.success('Test Deleted', settings);\n    dispatch({\n      type: DELETE_TEST,\n      payload: id\n    });\n  } catch (err) {\n    const errors = err.response.data;\n    if (errors) {\n      toast.error(errors.msg, settings);\n    }\n    dispatch({\n      type: CLASS_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}