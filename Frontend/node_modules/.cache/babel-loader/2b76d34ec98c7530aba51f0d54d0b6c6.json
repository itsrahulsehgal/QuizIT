{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { CREATE_CLASS, JOIN_CLASS, LEAVE_CLASS, CLASSES_LOADED, USER_ERROR, AUTH_RESET } from './actionTypes';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n}; // Get current user classes\n\nexport const getClasses = () => async dispatch => {\n  dispatch({\n    type: AUTH_RESET\n  });\n\n  try {\n    const res = await axios.get('/classrooms/', config);\n    dispatch({\n      type: CLASSES_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create new class\n\nexport const createClass = formData => async dispatch => {\n  dispatch({\n    type: AUTH_RESET\n  });\n\n  try {\n    const res = await axios.post('/api/classrooms/', formData, config);\n    toast.success('Class Created !', settings);\n    dispatch({\n      type: CREATE_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Leave current class\n\nexport const leaveClass = code => async dispatch => {\n  dispatch({\n    type: AUTH_RESET\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    await axios.delete(`/api/classrooms/${code}`, config);\n    toast.success('Class Removed !', settings);\n    dispatch({\n      type: LEAVE_CLASS,\n      payload: code\n    });\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Join new class\n\nexport const joinClass = (code, history) => async dispatch => {\n  dispatch({\n    type: AUTH_RESET\n  });\n\n  try {\n    const res = await axios.post(`/api/classrooms/${code}`, config);\n    toast.success('Class Added !', settings);\n    dispatch({\n      type: JOIN_CLASS,\n      payload: res.data\n    });\n\n    if (history) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/actions/user.js"],"names":["axios","toast","CREATE_CLASS","JOIN_CLASS","LEAVE_CLASS","CLASSES_LOADED","USER_ERROR","AUTH_RESET","config","headers","settings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getClasses","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","createClass","formData","post","success","error","leaveClass","code","delete","joinClass","history","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,UALF,EAMEC,UANF,QAOO,eAPP;AASA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf;AAMA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE,cADK;AAEfC,EAAAA,SAAS,EAAE,IAFI;AAGfC,EAAAA,eAAe,EAAE,KAHF;AAIfC,EAAAA,YAAY,EAAE,IAJC;AAKfC,EAAAA,YAAY,EAAE,IALC;AAMfC,EAAAA,SAAS,EAAE,IANI;AAOfC,EAAAA,QAAQ,EAAEC;AAPK,CAAjB,C,CAUA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,UAAMe,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,cAAV,EAA0Bf,MAA1B,CAAlB;AACAY,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,cADC;AAEPmB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,UADC;AAEPkB,MAAAA,OAAO,EAAE;AACPG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CAnBM,C,CAqBP;;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc,MAAOZ,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,UAAMe,GAAG,GAAG,MAAMtB,KAAK,CAACiC,IAAN,CAAW,kBAAX,EAA+BD,QAA/B,EAAyCxB,MAAzC,CAAlB;AACAP,IAAAA,KAAK,CAACiC,OAAN,CAAc,iBAAd,EAAiCxB,QAAjC;AACAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEnB,YADC;AAEPsB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZzB,IAAAA,KAAK,CAACkC,KAAN,CAAYT,GAAG,CAACE,QAAJ,CAAaC,UAAzB,EAAqCnB,QAArC;AACAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,UADC;AAEPkB,MAAAA,OAAO,EAAE;AACPG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CArBM,C,CAuBP;;AACA,OAAO,MAAMM,UAAU,GAAIC,IAAD,IAAU,MAAOjB,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;AAGA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAI;AACF,UAAMT,KAAK,CAACsC,MAAN,CAAc,mBAAkBD,IAAK,EAArC,EAAwC7B,MAAxC,CAAN;AACAP,IAAAA,KAAK,CAACiC,OAAN,CAAc,iBAAd,EAAiCxB,QAAjC;AACAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEjB,WADC;AAEPoB,MAAAA,OAAO,EAAEa;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOX,GAAP,EAAY;AACZzB,IAAAA,KAAK,CAACkC,KAAN,CAAYT,GAAG,CAACE,QAAJ,CAAaC,UAAzB,EAAqCnB,QAArC;AACAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,UADC;AAEPkB,MAAAA,OAAO,EAAE;AACPG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CA1BM,C,CA4BP;;AACA,OAAO,MAAMS,SAAS,GAAG,CAACF,IAAD,EAAOG,OAAP,KAAmB,MAAOpB,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,UAAMe,GAAG,GAAG,MAAMtB,KAAK,CAACiC,IAAN,CAAY,mBAAkBI,IAAK,EAAnC,EAAsC7B,MAAtC,CAAlB;AACAP,IAAAA,KAAK,CAACiC,OAAN,CAAc,eAAd,EAA+BxB,QAA/B;AAEAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElB,UADC;AAEPqB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;;AAIA,QAAIe,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD;AACF,GAXD,CAWE,OAAOf,GAAP,EAAY;AACZzB,IAAAA,KAAK,CAACkC,KAAN,CAAYT,GAAG,CAACE,QAAJ,CAAaC,UAAzB,EAAqCnB,QAArC;AACAU,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,UADC;AAEPkB,MAAAA,OAAO,EAAE;AACPG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CAzBM","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  CREATE_CLASS,\n  JOIN_CLASS,\n  LEAVE_CLASS,\n  CLASSES_LOADED,\n  USER_ERROR,\n  AUTH_RESET\n} from './actionTypes';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst settings = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n};\n\n// Get current user classes\nexport const getClasses = () => async (dispatch) => {\n  dispatch({\n    type: AUTH_RESET\n  });\n  try {\n    const res = await axios.get('/classrooms/', config);\n    dispatch({\n      type: CLASSES_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Create new class\nexport const createClass = (formData) => async (dispatch) => {\n  dispatch({\n    type: AUTH_RESET\n  });\n  try {\n    const res = await axios.post('/api/classrooms/', formData, config);\n    toast.success('Class Created !', settings);\n    dispatch({\n      type: CREATE_CLASS,\n      payload: res.data\n    });\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Leave current class\nexport const leaveClass = (code) => async (dispatch) => {\n  dispatch({\n    type: AUTH_RESET\n  });\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  try {\n    await axios.delete(`/api/classrooms/${code}`, config);\n    toast.success('Class Removed !', settings);\n    dispatch({\n      type: LEAVE_CLASS,\n      payload: code\n    });\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Join new class\nexport const joinClass = (code, history) => async (dispatch) => {\n  dispatch({\n    type: AUTH_RESET\n  });\n  try {\n    const res = await axios.post(`/api/classrooms/${code}`, config);\n    toast.success('Class Added !', settings);\n\n    dispatch({\n      type: JOIN_CLASS,\n      payload: res.data\n    });\n    if (history) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    toast.error(err.response.statusText, settings);\n    dispatch({\n      type: USER_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}