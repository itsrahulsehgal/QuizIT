{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/learn_apti-frontend/src/components/authentication/register/RegisterForm.js\",\n  _s = $RefreshSig$();\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\nimport { register } from '../../../actions/auth';\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm(_ref) {\n  _s();\n  let {\n    register\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    Fname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    Lname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      Fname: '',\n      Lname: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: values => {\n      register(values);\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"First name\",\n            ...getFieldProps('Fname'),\n            error: Boolean(touched.Fname && errors.Fname),\n            helperText: touched.Fname && errors.Fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Last name\",\n            ...getFieldProps('Lname'),\n            error: Boolean(touched.Lname && errors.Lname),\n            helperText: touched.Lname && errors.Lname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email address\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"NHvwTgWisXmYcXpq6XbEDoaa5a0=\", false, function () {\n  return [useFormik];\n});\n_c = RegisterForm;\nRegisterForm.propTypes = {\n  register: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  register\n})(RegisterForm);\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["Yup","connect","PropTypes","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","Stack","TextField","IconButton","InputAdornment","LoadingButton","register","jsxDEV","_jsxDEV","RegisterForm","_ref","_s","showPassword","setShowPassword","RegisterSchema","object","shape","Fname","string","min","max","required","Lname","email","password","formik","initialValues","validationSchema","onSubmit","values","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","children","autoComplete","noValidate","spacing","direction","xs","sm","fullWidth","label","error","Boolean","helperText","fileName","_jsxFileName","lineNumber","columnNumber","type","InputProps","endAdornment","position","edge","onClick","prev","icon","size","variant","loading","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/home/rahul/Desktop/learn_apti-frontend/src/components/authentication/register/RegisterForm.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n\nimport { register } from '../../../actions/auth';\n// ----------------------------------------------------------------------\n\nfunction RegisterForm({ register }) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    Fname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    Lname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      Fname: '',\n      Lname: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values) => {\n      register(values);\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('Fname')}\n              error={Boolean(touched.Fname && errors.Fname)}\n              helperText={touched.Fname && errors.Fname}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('Lname')}\n              error={Boolean(touched.Lname && errors.Lname)}\n              helperText={touched.Lname && errors.Lname}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n\nRegisterForm.propTypes = {\n  register: PropTypes.func.isRequired\n};\n\nexport default connect(null, { register })(RegisterForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}