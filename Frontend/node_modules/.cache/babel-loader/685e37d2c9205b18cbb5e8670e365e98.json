{"ast":null,"code":"import { GET_CLASS, EDIT_CLASS, CLASS_ERROR, CLASS_RESET, GET_TESTS, CREATE_TEST, DELETE_TEST, GET_TEST, SUBMIT_TEST, GET_USER } from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  currClass: null,\n  currTest: null,\n  tests: [],\n  users: []\n}; // switch case block and then returning data acc to the action type\n\nexport default function ClassReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLASS_ERROR:\n      {\n        return { ...state,\n          currClass: null,\n          loading: false\n        };\n      }\n\n    case GET_USER:\n      return { ...state,\n        users: action.payload,\n        loading: false\n      };\n\n    case GET_TESTS:\n      return { ...state,\n        tests: action.payload,\n        loading: false\n      };\n\n    case GET_TEST:\n      return { ...state,\n        currTest: action.payload,\n        loading: false\n      };\n\n    case SUBMIT_TEST:\n      return { ...state,\n        test: null,\n        loading: false\n      };\n\n    case CREATE_TEST:\n      {\n        return { ...state,\n          tests: [...state.tests, action.payload],\n          loading: false\n        };\n      }\n\n    case DELETE_TEST:\n      {\n        return { ...state,\n          tests: state.tests.filter(test => test._id !== action.payload),\n          loading: false\n        };\n      }\n\n    case GET_CLASS:\n    case EDIT_CLASS:\n      {\n        return { ...state,\n          currClass: action.payload,\n          loading: false\n        };\n      }\n\n    case CLASS_RESET:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n_c = ClassReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassReducer\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/reducers/classroom.js"],"names":["GET_CLASS","EDIT_CLASS","CLASS_ERROR","CLASS_RESET","GET_TESTS","CREATE_TEST","DELETE_TEST","GET_TEST","SUBMIT_TEST","GET_USER","initialState","loading","currClass","currTest","tests","users","ClassReducer","state","action","type","payload","test","filter","_id"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,QARF,EASEC,WATF,EAUEC,QAVF,QAWO,wBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB,C,CAQA;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGP,YAA9B,EAA4CQ,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGe,KADE;AAELL,UAAAA,SAAS,EAAE,IAFN;AAGLD,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKF,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFT;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAFZ;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELI,QAAAA,IAAI,EAAE,IAFD;AAGLV,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGY,KADE;AAELH,UAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB,CAFF;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKL,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGW,KADE;AAELH,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAoBD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaL,MAAM,CAACE,OAAjD,CAFF;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKX,SAAL;AACA,SAAKC,UAAL;AAAiB;AACf,eAAO,EACL,GAAGgB,KADE;AAELL,UAAAA,SAAS,EAAEM,MAAM,CAACE,OAFb;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKR,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGc,KADE;AAELN,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD;AAAS;AACP,eAAOM,KAAP;AACD;AA9DH;AAgED;KAjEuBD,Y","sourcesContent":["import {\n  GET_CLASS,\n  EDIT_CLASS,\n  CLASS_ERROR,\n  CLASS_RESET,\n  GET_TESTS,\n  CREATE_TEST,\n  DELETE_TEST,\n  GET_TEST,\n  SUBMIT_TEST,\n  GET_USER\n} from '../actions/actionTypes';\n\nconst initialState = {\n  loading: false,\n  currClass: null,\n  currTest: null,\n  tests: [],\n  users: []\n};\n\n// switch case block and then returning data acc to the action type\nexport default function ClassReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLASS_ERROR: {\n      return {\n        ...state,\n        currClass: null,\n        loading: false\n      };\n    }\n    case GET_USER:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      };\n    case GET_TESTS:\n      return {\n        ...state,\n        tests: action.payload,\n        loading: false\n      };\n    case GET_TEST:\n      return {\n        ...state,\n        currTest: action.payload,\n        loading: false\n      };\n    case SUBMIT_TEST:\n      return {\n        ...state,\n        test: null,\n        loading: false\n      };\n    case CREATE_TEST: {\n      return {\n        ...state,\n        tests: [...state.tests, action.payload],\n        loading: false\n      };\n    }\n    case DELETE_TEST: {\n      return {\n        ...state,\n        tests: state.tests.filter((test) => test._id !== action.payload),\n        loading: false\n      };\n    }\n    case GET_CLASS:\n    case EDIT_CLASS: {\n      return {\n        ...state,\n        currClass: action.payload,\n        loading: false\n      };\n    }\n    case CLASS_RESET: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}