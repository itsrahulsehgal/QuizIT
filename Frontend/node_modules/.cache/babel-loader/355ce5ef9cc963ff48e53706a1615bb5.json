{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/createTest/QuestionForm.js\",\n    _s = $RefreshSig$();\n\nimport { Icon } from '@iconify/react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport trashFill from '@iconify/icons-eva/trash-2-fill';\nimport { useDropzone } from 'react-dropzone'; // material\n\nimport { Stack, TextField, IconButton, Button, Typography } from '@material-ui/core';\nimport Resizer from 'react-image-file-resizer'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst resizeFile = file => new Promise(resolve => {\n  Resizer.imageFileResizer(file, 300, 300, 'JPEG', 100, 0, uri => {\n    resolve(uri);\n  }, 'base64');\n});\n\nfunction QuestionForm({\n  handleBack,\n  handleNext,\n  questions,\n  setQuestion,\n  testId\n}) {\n  _s();\n\n  const ques = {\n    question: '',\n    type: 1,\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    answer: '',\n    testId\n  };\n\n  const AddQuestion = () => {\n    setQuestion([...questions, ques]);\n  };\n\n  const RemoveQuestion = index => {\n    const list = [...questions];\n    setQuestion(list.filter((value, i) => i !== index));\n  };\n\n  const handleChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const list = [...questions];\n    list[index][name] = value;\n    setQuestion(list);\n  };\n\n  const onDrop = async acceptedFiles => {\n    try {\n      const image = await resizeFile(acceptedFiles[0]);\n      const list = [...questions];\n      list[list.length - 1].question = image;\n      setQuestion(list);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 3,\n    children: [questions.map((curr, index) => /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: [curr.question.includes('data:image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: curr.question,\n        alt: \"question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"question\",\n          name: \"question\",\n          value: curr.question,\n          label: `Question ${index + 1}`,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: 'dropzone'\n          }),\n          style: {\n            padding: 15,\n            borderRadius: 15,\n            border: '2px dashed '\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            color: \"inherit\",\n            variant: \"title2\",\n            underline: \"hover\",\n            children: \"Class cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: 'text.disabled',\n              display: 'block'\n            },\n            variant: \"subtitle2\",\n            underline: \"hover\",\n            children: \"Drag and drop or click to select image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: 'text.disabled',\n              display: 'block'\n            },\n            variant: \"subtitle2\",\n            children: \"( Only *.jpeg and *.png format will be accepted )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column',\n          sm: 'row'\n        },\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"option1\",\n          name: \"option1\",\n          label: \"Option 1\",\n          value: curr.option1,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"option2\",\n          name: \"option2\",\n          label: \"Option 2\",\n          value: curr.option2,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column',\n          sm: 'row'\n        },\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"option3\",\n          name: \"option3\",\n          label: \"Option3\",\n          value: curr.option3,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"option4\",\n          name: \"option4\",\n          label: \"Option4\",\n          value: curr.option4,\n          fullWidth: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column',\n          sm: 'row'\n        },\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"answer\",\n          name: \"answer\",\n          label: \"Answer\",\n          value: curr.answer,\n          fullWidth: true,\n          required: true,\n          onChange: e => handleChange(e, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"type\",\n            name: \"type\",\n            label: \"Type\",\n            type: \"number\",\n            value: curr.type,\n            onChange: e => handleChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => RemoveQuestion(index),\n            color: \"error\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: trashFill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: {\n        xs: 'column',\n        sm: 'row'\n      },\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: AddQuestion,\n        startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n          icon: plusFill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 22\n        }, this),\n        children: \"Add new question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          right: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          style: {\n            margin: 5\n          },\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disableElevation: true,\n          style: {\n            margin: 10\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionForm, \"a6n/8sU/3Si3hjIh3DKgs8O3D8A=\", false, function () {\n  return [useDropzone];\n});\n\n_c = QuestionForm;\nQuestionForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setQuestion: PropTypes.func.isRequired,\n  questions: PropTypes.array.isRequired,\n  testId: PropTypes.string.isRequired\n};\nexport default QuestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/createTest/QuestionForm.js"],"names":["Icon","React","PropTypes","plusFill","trashFill","useDropzone","Stack","TextField","IconButton","Button","Typography","Resizer","resizeFile","file","Promise","resolve","imageFileResizer","uri","QuestionForm","handleBack","handleNext","questions","setQuestion","testId","ques","question","type","option1","option2","option3","option4","answer","AddQuestion","RemoveQuestion","index","list","filter","value","i","handleChange","e","name","target","onDrop","acceptedFiles","image","length","err","console","log","getRootProps","getInputProps","accept","map","curr","includes","className","padding","borderRadius","border","color","display","xs","sm","position","right","margin","propTypes","func","isRequired","array","string"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,MAAvC,EAA+CC,UAA/C,QAAiE,mBAAjE;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CAEA;;;;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IACjB,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBJ,EAAAA,OAAO,CAACK,gBAAR,CACEH,IADF,EAEE,GAFF,EAGE,GAHF,EAIE,MAJF,EAKE,GALF,EAME,CANF,EAOGI,GAAD,IAAS;AACPF,IAAAA,OAAO,CAACE,GAAD,CAAP;AACD,GATH,EAUE,QAVF;AAYD,CAbD,CADF;;AAgBA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,SAA1B;AAAqCC,EAAAA,WAArC;AAAkDC,EAAAA;AAAlD,CAAtB,EAAkF;AAAA;;AAChF,QAAMC,IAAI,GAAG;AACXC,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,OAAO,EAAE,EAHE;AAIXC,IAAAA,OAAO,EAAE,EAJE;AAKXC,IAAAA,OAAO,EAAE,EALE;AAMXC,IAAAA,OAAO,EAAE,EANE;AAOXC,IAAAA,MAAM,EAAE,EAPG;AAQXR,IAAAA;AARW,GAAb;;AAWA,QAAMS,WAAW,GAAG,MAAM;AACxBV,IAAAA,WAAW,CAAC,CAAC,GAAGD,SAAJ,EAAeG,IAAf,CAAD,CAAX;AACD,GAFD;;AAGA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,IAAI,GAAG,CAAC,GAAGd,SAAJ,CAAb;AACAC,IAAAA,WAAW,CAACa,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,CAAR,KAAcA,CAAC,KAAKJ,KAAhC,CAAD,CAAX;AACD,GAHD;;AAIA,QAAMK,YAAY,GAAG,CAACC,CAAD,EAAIN,KAAJ,KAAc;AACjC,UAAM;AAAEO,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,QAAkBG,CAAC,CAACE,MAA1B;AACA,UAAMP,IAAI,GAAG,CAAC,GAAGd,SAAJ,CAAb;AACAc,IAAAA,IAAI,CAACD,KAAD,CAAJ,CAAYO,IAAZ,IAAoBJ,KAApB;AACAf,IAAAA,WAAW,CAACa,IAAD,CAAX;AACD,GALD;;AAOA,QAAMQ,MAAM,GAAG,MAAOC,aAAP,IAAyB;AACtC,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMjC,UAAU,CAACgC,aAAa,CAAC,CAAD,CAAd,CAA9B;AACA,YAAMT,IAAI,GAAG,CAAC,GAAGd,SAAJ,CAAb;AACAc,MAAAA,IAAI,CAACA,IAAI,CAACW,MAAL,GAAc,CAAf,CAAJ,CAAsBrB,QAAtB,GAAiCoB,KAAjC;AACAvB,MAAAA,WAAW,CAACa,IAAD,CAAX;AACD,KALD,CAKE,OAAOY,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GATD;;AAUA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkC9C,WAAW,CAAC;AAClDsC,IAAAA,MADkD;AAElDS,IAAAA,MAAM,EAAE;AAF0C,GAAD,CAAnD;AAKA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAA,eACG/B,SAAS,CAACgC,GAAV,CAAc,CAACC,IAAD,EAAOpB,KAAP,kBACb,QAAC,KAAD;AAAmB,MAAA,OAAO,EAAE,CAA5B;AAAA,iBACGoB,IAAI,CAAC7B,QAAL,CAAc8B,QAAd,CAAuB,aAAvB,iBACC;AAAK,QAAA,GAAG,EAAED,IAAI,CAAC7B,QAAf;AAAyB,QAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAE6B,IAAI,CAAC7B,QAJd;AAKE,UAAA,KAAK,EAAG,YAAWS,KAAK,GAAG,CAAE,EAL/B;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGM,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,sBAJJ,eAiBE;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,+BACE,oBACMgB,YAAY,CAAC;AAAEM,YAAAA,SAAS,EAAE;AAAb,WAAD,CADlB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE,EAAX;AAAeC,YAAAA,YAAY,EAAE,EAA7B;AAAiCC,YAAAA,MAAM,EAAE;AAAzC,WAFT;AAAA,kCAIE,sBAAWR,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,KAAK,EAAC,SAA/B;AAAyC,YAAA,OAAO,EAAC,QAAjD;AAA0D,YAAA,SAAS,EAAC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAQE,QAAC,UAAD;AACE,YAAA,EAAE,EAAE;AAAES,cAAAA,KAAK,EAAE,eAAT;AAA0BC,cAAAA,OAAO,EAAE;AAAnC,aADN;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAeE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAE;AAAED,cAAAA,KAAK,EAAE,eAAT;AAA0BC,cAAAA,OAAO,EAAE;AAAnC,aAAhB;AAA8D,YAAA,OAAO,EAAC,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAsCE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAE,QAAN;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAAlB;AAA+C,QAAA,OAAO,EAAE,CAAxD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,KAAK,EAAET,IAAI,CAAC3B,OALd;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGa,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,KAAK,EAAEoB,IAAI,CAAC1B,OALd;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGY,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF,eA0DE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE;AAAE4B,UAAAA,EAAE,EAAE,QAAN;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAAlB;AAA+C,QAAA,OAAO,EAAE,CAAxD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,KAAK,EAAET,IAAI,CAACzB,OALd;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGW,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,SAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,SAHP;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,KAAK,EAAEoB,IAAI,CAACxB,OALd;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGU,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DF,eA8EE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE;AAAE4B,UAAAA,EAAE,EAAE,QAAN;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAAlB;AAA+C,QAAA,OAAO,EAAE,CAAxD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAC,QAHR;AAIE,UAAA,KAAK,EAAET,IAAI,CAACvB,MAJd;AAKE,UAAA,SAAS,MALX;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,QAAQ,EAAGS,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAP/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,KAAjB;AAAuB,UAAA,OAAO,EAAE,CAAhC;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAC,MAHR;AAIE,YAAA,IAAI,EAAC,QAJP;AAKE,YAAA,KAAK,EAAEoB,IAAI,CAAC5B,IALd;AAME,YAAA,QAAQ,EAAGc,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIN,KAAJ;AAN/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAMD,cAAc,CAACC,KAAD,CAAzC;AAAkD,YAAA,KAAK,EAAC,OAAxD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE9B;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA9EF;AAAA,OAAY8B,KAAZ;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eA4GE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE;AAAE4B,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAAlB;AAA+C,MAAA,OAAO,EAAE,CAAxD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE/B,WAHX;AAIE,QAAA,SAAS,eAAE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE7B;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5GF,eAuHE;AAAK,MAAA,KAAK,EAAE;AAAE6D,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE;AAA/B,SAAZ;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA/B;AAA8C,UAAA,OAAO,EAAE/C,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,gBAAgB,MADlB;AAEE,UAAA,KAAK,EAAE;AAAE+C,YAAAA,MAAM,EAAE;AAAV,WAFT;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,OAAO,EAAE9C,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0ID;;GAnLQF,Y;UAoCiCb,W;;;KApCjCa,Y;AAqLTA,YAAY,CAACiD,SAAb,GAAyB;AACvBhD,EAAAA,UAAU,EAAEjB,SAAS,CAACkE,IAAV,CAAeC,UADJ;AAEvBjD,EAAAA,UAAU,EAAElB,SAAS,CAACkE,IAAV,CAAeC,UAFJ;AAGvB/C,EAAAA,WAAW,EAAEpB,SAAS,CAACkE,IAAV,CAAeC,UAHL;AAIvBhD,EAAAA,SAAS,EAAEnB,SAAS,CAACoE,KAAV,CAAgBD,UAJJ;AAKvB9C,EAAAA,MAAM,EAAErB,SAAS,CAACqE,MAAV,CAAiBF;AALF,CAAzB;AAQA,eAAenD,YAAf","sourcesContent":["import { Icon } from '@iconify/react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport trashFill from '@iconify/icons-eva/trash-2-fill';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { Stack, TextField, IconButton, Button, Typography } from '@material-ui/core';\nimport Resizer from 'react-image-file-resizer';\n\n// ----------------------------------------------------------------------\n\nconst resizeFile = (file) =>\n  new Promise((resolve) => {\n    Resizer.imageFileResizer(\n      file,\n      300,\n      300,\n      'JPEG',\n      100,\n      0,\n      (uri) => {\n        resolve(uri);\n      },\n      'base64'\n    );\n  });\n\nfunction QuestionForm({ handleBack, handleNext, questions, setQuestion, testId }) {\n  const ques = {\n    question: '',\n    type: 1,\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    answer: '',\n    testId\n  };\n\n  const AddQuestion = () => {\n    setQuestion([...questions, ques]);\n  };\n  const RemoveQuestion = (index) => {\n    const list = [...questions];\n    setQuestion(list.filter((value, i) => i !== index));\n  };\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...questions];\n    list[index][name] = value;\n    setQuestion(list);\n  };\n\n  const onDrop = async (acceptedFiles) => {\n    try {\n      const image = await resizeFile(acceptedFiles[0]);\n      const list = [...questions];\n      list[list.length - 1].question = image;\n      setQuestion(list);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n\n  return (\n    <Stack spacing={3}>\n      {questions.map((curr, index) => (\n        <Stack key={index} spacing={2}>\n          {curr.question.includes('data:image/') ? (\n            <img src={curr.question} alt=\"question\" />\n          ) : (\n            <>\n              <TextField\n                required\n                id=\"question\"\n                name=\"question\"\n                value={curr.question}\n                label={`Question ${index + 1}`}\n                fullWidth\n                onChange={(e) => handleChange(e, index)}\n              />\n              <Typography>OR</Typography>\n            </>\n          )}\n          <section className=\"container\">\n            <div\n              {...getRootProps({ className: 'dropzone' })}\n              style={{ padding: 15, borderRadius: 15, border: '2px dashed ' }}\n            >\n              <input {...getInputProps()} />\n              <Typography gutterBottom color=\"inherit\" variant=\"title2\" underline=\"hover\">\n                Class cover\n              </Typography>\n              <Typography\n                sx={{ color: 'text.disabled', display: 'block' }}\n                variant=\"subtitle2\"\n                underline=\"hover\"\n              >\n                Drag and drop or click to select image\n              </Typography>\n              <Typography sx={{ color: 'text.disabled', display: 'block' }} variant=\"subtitle2\">\n                ( Only *.jpeg and *.png format will be accepted )\n              </Typography>\n            </div>\n          </section>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              required\n              id=\"option1\"\n              name=\"option1\"\n              label=\"Option 1\"\n              value={curr.option1}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n            <TextField\n              required\n              id=\"option2\"\n              name=\"option2\"\n              label=\"Option 2\"\n              value={curr.option2}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n          </Stack>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              required\n              id=\"option3\"\n              name=\"option3\"\n              label=\"Option3\"\n              value={curr.option3}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n            <TextField\n              required\n              id=\"option4\"\n              name=\"option4\"\n              label=\"Option4\"\n              value={curr.option4}\n              fullWidth\n              onChange={(e) => handleChange(e, index)}\n            />\n          </Stack>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              id=\"answer\"\n              name=\"answer\"\n              label=\"Answer\"\n              value={curr.answer}\n              fullWidth\n              required\n              onChange={(e) => handleChange(e, index)}\n            />\n            <Stack direction=\"row\" spacing={2}>\n              <TextField\n                id=\"type\"\n                name=\"type\"\n                label=\"Type\"\n                type=\"number\"\n                value={curr.type}\n                onChange={(e) => handleChange(e, index)}\n              />\n\n              <IconButton onClick={() => RemoveQuestion(index)} color=\"error\">\n                <Icon icon={trashFill} />\n              </IconButton>\n            </Stack>\n          </Stack>\n        </Stack>\n      ))}\n\n      <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={AddQuestion}\n          startIcon={<Icon icon={plusFill} />}\n        >\n          Add new question\n        </Button>\n      </Stack>\n\n      <div style={{ position: 'relative' }}>\n        <div style={{ position: 'absolute', right: 0 }}>\n          <Button color=\"primary\" style={{ margin: 5 }} onClick={handleBack}>\n            Back\n          </Button>\n          <Button\n            disableElevation\n            style={{ margin: 10 }}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleNext}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </Stack>\n  );\n}\n\nQuestionForm.propTypes = {\n  handleBack: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  setQuestion: PropTypes.func.isRequired,\n  questions: PropTypes.array.isRequired,\n  testId: PropTypes.string.isRequired\n};\n\nexport default QuestionForm;\n"]},"metadata":{},"sourceType":"module"}