{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/Manthan/client/src/components/classroom/EditClass.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport { Icon } from '@iconify/react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Button, MenuItem, Box, TextField, Dialog, DialogActions, DialogContent, DialogTitle, Stack, Typography } from '@material-ui/core';\nimport { editClass } from '../../actions/classroom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditClass({\n  editClass,\n  classroom: {\n    currClass\n  }\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [cover, setCover] = React.useState(currClass.cover);\n  const ClassSchema = Yup.object().shape({\n    title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Class name required'),\n    subject: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n    subCode: Yup.string().max(1, 'Too Short!').max(10, 'Too Long!')\n  });\n\n  const onDrop = acceptedFiles => {\n    const reader = new FileReader();\n    reader.readAsDataURL(acceptedFiles[0]);\n\n    reader.onload = () => setCover(reader.result);\n  };\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: currClass.title,\n      subject: currClass.subject,\n      subCode: currClass.subCode\n    },\n    validationSchema: ClassSchema,\n    onSubmit: values => {\n      editClass(currClass.code, { ...values,\n        cover\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleClickOpen,\n      sx: {\n        typography: 'body2',\n        py: 1,\n        px: 2.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: Icon,\n        icon: settings2Fill,\n        sx: {\n          mr: 2,\n          width: 24,\n          height: 24\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \"Edit Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Class Name\",\n                ...getFieldProps('title'),\n                error: Boolean(touched.title && errors.title),\n                helperText: touched.title && errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Subject\",\n                ...getFieldProps('subject'),\n                error: Boolean(touched.subject && errors.subject),\n                helperText: touched.subject && errors.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Subject Code\",\n                ...getFieldProps('subCode'),\n                error: Boolean(touched.subCode && errors.subCode),\n                helperText: touched.subCode && errors.subCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n                    className: 'dropzone'\n                  }),\n                  style: {\n                    padding: 15,\n                    borderRadius: 15,\n                    border: '2px dashed '\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    color: \"inherit\",\n                    variant: \"title2\",\n                    underline: \"hover\",\n                    children: [\"Class cover \", acceptedFiles.length ? ` : ${acceptedFiles[0].path}` : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      color: 'text.disabled',\n                      display: 'block'\n                    },\n                    variant: \"subtitle2\",\n                    underline: \"hover\",\n                    children: \"Drag and drop or click to select image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      color: 'text.disabled',\n                      display: 'block'\n                    },\n                    variant: \"subtitle2\",\n                    children: \"( Only *.jpeg and *.png format will be accepted )\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: handleClose,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditClass, \"vnZvf0UVJQcqXjvffJe/0QHjuMY=\", false, function () {\n  return [useDropzone, useFormik];\n});\n\n_c = EditClass;\nEditClass.propTypes = {\n  editClass: PropTypes.func.isRequired,\n  classroom: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  classroom: state.classroom\n});\n\nexport default connect(mapStateToProps, {\n  editClass\n})(EditClass);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditClass\");","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/components/classroom/EditClass.js"],"names":["React","Yup","connect","settings2Fill","Icon","PropTypes","useDropzone","useFormik","Form","FormikProvider","Button","MenuItem","Box","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Stack","Typography","editClass","EditClass","classroom","currClass","open","setOpen","useState","cover","setCover","ClassSchema","object","shape","title","string","min","max","required","subject","subCode","onDrop","acceptedFiles","reader","FileReader","readAsDataURL","onload","result","getRootProps","getInputProps","accept","handleClickOpen","handleClose","formik","initialValues","validationSchema","onSubmit","values","code","errors","touched","handleSubmit","getFieldProps","typography","py","px","mr","width","height","Boolean","className","padding","borderRadius","border","length","path","color","display","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\n\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport { Icon } from '@iconify/react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport {\n  Button,\n  MenuItem,\n  Box,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n  Typography\n} from '@material-ui/core';\n\nimport { editClass } from '../../actions/classroom';\n\nfunction EditClass({ editClass, classroom: { currClass } }) {\n  const [open, setOpen] = React.useState(false);\n\n  const [cover, setCover] = React.useState(currClass.cover);\n  const ClassSchema = Yup.object().shape({\n    title: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Class name required'),\n    subject: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!'),\n    subCode: Yup.string().max(1, 'Too Short!').max(10, 'Too Long!')\n  });\n  const onDrop = (acceptedFiles) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(acceptedFiles[0]);\n    reader.onload = () => setCover(reader.result);\n  };\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      title: currClass.title,\n      subject: currClass.subject,\n      subCode: currClass.subCode\n    },\n    validationSchema: ClassSchema,\n    onSubmit: (values) => {\n      editClass(currClass.code, { ...values, cover });\n    }\n  });\n\n  const { errors, touched, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <div>\n      <MenuItem onClick={handleClickOpen} sx={{ typography: 'body2', py: 1, px: 2.5 }}>\n        <Box\n          component={Icon}\n          icon={settings2Fill}\n          sx={{\n            mr: 2,\n            width: 24,\n            height: 24\n          }}\n        />\n        Edit Details\n      </MenuItem>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Create Class</DialogTitle>\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            <DialogContent>\n              <Stack spacing={3}>\n                <TextField\n                  fullWidth\n                  label=\"Class Name\"\n                  {...getFieldProps('title')}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n                <TextField\n                  fullWidth\n                  label=\"Subject\"\n                  {...getFieldProps('subject')}\n                  error={Boolean(touched.subject && errors.subject)}\n                  helperText={touched.subject && errors.subject}\n                />\n                <TextField\n                  fullWidth\n                  label=\"Subject Code\"\n                  {...getFieldProps('subCode')}\n                  error={Boolean(touched.subCode && errors.subCode)}\n                  helperText={touched.subCode && errors.subCode}\n                />\n                <section className=\"container\">\n                  <div\n                    {...getRootProps({ className: 'dropzone' })}\n                    style={{ padding: 15, borderRadius: 15, border: '2px dashed ' }}\n                  >\n                    <input {...getInputProps()} />\n                    <Typography gutterBottom color=\"inherit\" variant=\"title2\" underline=\"hover\">\n                      Class cover {acceptedFiles.length ? ` : ${acceptedFiles[0].path}` : null}\n                    </Typography>\n                    <Typography\n                      sx={{ color: 'text.disabled', display: 'block' }}\n                      variant=\"subtitle2\"\n                      underline=\"hover\"\n                    >\n                      Drag and drop or click to select image\n                    </Typography>\n                    <Typography\n                      sx={{ color: 'text.disabled', display: 'block' }}\n                      variant=\"subtitle2\"\n                    >\n                      ( Only *.jpeg and *.png format will be accepted )\n                    </Typography>\n                  </div>\n                </section>\n              </Stack>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button type=\"submit\" onClick={handleClose}>\n                Submit\n              </Button>\n            </DialogActions>\n          </Form>\n        </FormikProvider>\n      </Dialog>\n    </div>\n  );\n}\n\nEditClass.propTypes = {\n  editClass: PropTypes.func.isRequired,\n  classroom: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n  classroom: state.classroom\n});\n\nexport default connect(mapStateToProps, { editClass })(EditClass);\n"]},"metadata":{},"sourceType":"module"}