{"ast":null,"code":"export function parseURLParams(url) {\n  const queryStart = url.indexOf('?') + 1;\n  const queryEnd = url.indexOf('#') + 1 || url.length + 1;\n  const query = url.slice(queryStart, queryEnd - 1);\n  const pairs = query.replace(/\\+/g, ' ').split('&');\n  const parms = {};\n\n  if (query !== url && query !== '') {\n    pairs.forEach(value => {\n      const nv = value.split('=', 2);\n      const n = decodeURIComponent(nv[0]);\n      const v = decodeURIComponent(nv[1]);\n      parms[n] = v;\n    });\n  }\n\n  return parms;\n}","map":{"version":3,"sources":["/home/rahul/Desktop/Manthan/client/src/utils/parseUrlParams.js"],"names":["parseURLParams","url","queryStart","indexOf","queryEnd","length","query","slice","pairs","replace","split","parms","forEach","value","nv","n","decodeURIComponent","v"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;AAClC,QAAMC,UAAU,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,IAAmB,CAAtC;AACA,QAAMC,QAAQ,GAAGH,GAAG,CAACE,OAAJ,CAAY,GAAZ,IAAmB,CAAnB,IAAwBF,GAAG,CAACI,MAAJ,GAAa,CAAtD;AACA,QAAMC,KAAK,GAAGL,GAAG,CAACM,KAAJ,CAAUL,UAAV,EAAsBE,QAAQ,GAAG,CAAjC,CAAd;AACA,QAAMI,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAc,KAAd,EAAqB,GAArB,EAA0BC,KAA1B,CAAgC,GAAhC,CAAd;AACA,QAAMC,KAAK,GAAG,EAAd;;AAEA,MAAIL,KAAK,KAAKL,GAAV,IAAiBK,KAAK,KAAK,EAA/B,EAAmC;AACjCE,IAAAA,KAAK,CAACI,OAAN,CAAeC,KAAD,IAAW;AACvB,YAAMC,EAAE,GAAGD,KAAK,CAACH,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAX;AACA,YAAMK,CAAC,GAAGC,kBAAkB,CAACF,EAAE,CAAC,CAAD,CAAH,CAA5B;AACA,YAAMG,CAAC,GAAGD,kBAAkB,CAACF,EAAE,CAAC,CAAD,CAAH,CAA5B;AAEAH,MAAAA,KAAK,CAACI,CAAD,CAAL,GAAWE,CAAX;AACD,KAND;AAOD;;AACD,SAAON,KAAP;AACD","sourcesContent":["export function parseURLParams(url) {\n  const queryStart = url.indexOf('?') + 1;\n  const queryEnd = url.indexOf('#') + 1 || url.length + 1;\n  const query = url.slice(queryStart, queryEnd - 1);\n  const pairs = query.replace(/\\+/g, ' ').split('&');\n  const parms = {};\n\n  if (query !== url && query !== '') {\n    pairs.forEach((value) => {\n      const nv = value.split('=', 2);\n      const n = decodeURIComponent(nv[0]);\n      const v = decodeURIComponent(nv[1]);\n\n      parms[n] = v;\n    });\n  }\n  return parms;\n}\n"]},"metadata":{},"sourceType":"module"}